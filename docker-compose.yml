version: '3'
services:
  postgresql:
    image: postgres
    container_name: postgres
    networks:
      - dev_ops_network
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=F4862131
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dev_ops
      - PGDATA=C:\Program Files\PostgreSQL\12\data
    volumes:
      - C:\Program Files\PostgreSQL\12\data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@linuxhint.com
      PGADMIN_DEFAULT_PASSWORD: F4862131
      PGADMIN_LISTEN_PORT: 80
    ports:
    - "8080:80"
    volumes:
    - C:\Program Files\PostgreSQL\12\pgAdmin 4
    links:
      - "postgresql:pgsql-server"
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: DevOps
      RABBITMQ_DEFAULT_PASS: DevOps
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - dev_ops_network
  discovery:
    container_name: dev_ops
    image: dev_ops:latest
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dev_ops
      host_shop_service: http://shop:8081
      host_store_shop: http://store:8082
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - dev_ops_network
    depends_on:
      - postgresql

  shop:
    container_name: shop_service
    image: shop_service:latest
    restart: on-failure
    build:
      context: ./shop_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dev_ops
      EUREKA_SERVER: http://discovery:8761/eureka/
      RABBITMQ_HOST: rabbitmq
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - dev_ops_network
    depends_on:
      - rabbitmq
      - discovery
      - postgresql
    ports:
      - "8081:8081"
    links:
      - discovery:discovery

  store:
    container_name: store_service
    image: store_service:latest
    restart: on-failure
    build:
      context: ./store_shop
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dev_ops
      EUREKA_SERVER: http://discovery:8761/eureka/
      RABBITMQ_HOST: rabbitmq
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - dev_ops_network
    depends_on:
      - rabbitmq
      - discovery
      - postgresql
    ports:
      - "8082:8082"
    links:
      - discovery:discovery
networks:
  dev_ops_network:
    driver: bridge
volumes:
  db-data:
    driver: local
  pgadmin-data:
  db: